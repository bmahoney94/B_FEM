This file holds my brainstorming for what all I'm going to implement in the beam finite element code.

------------------------------------------------------------------------------------

Put description in a markdown file

Write a symbolic demo that uses ipython notebooks and SymPy
	
Directories
	1. Configuration and sample input cases
	2. C 
	3. Python
	4. Fortran

------------------------------------------------------------------------------------

Input File
	Area
	Elastic Modulus
	Second moment of area
	Total length
	Load distribution
	Number of nodes
	Connectivity?  I think I can generate this and won't need to input it.
	Boundary conditions
	

Output File

Tests
	Automation
	Pass/Fail Criteria

Meshing
	Discontinuities must be nodes
	Calculate minimum number of nodes necessary
	Order of mesh point assignments --> After necessary nodes are created, where do we put additional ones?
		Based on derivative approximation of section stiffness integrand
		Based on length of interval

	
Assembly
	Quadrature
	Slicing element arrays

Solver


-------------------------------------------------------------------------------------

Optional Additions
	Chebyshev assumed solution --> spectral element code
	Post Processing
		Shear
		Graphs
		Fourier modes
		Variationally consistent boundary forces
	General load distributions
		Keyword & parameter specified
		Point-set + interpolation specified
	Varying Cross-sections
		Varying area
		Varying second moment of area
	Trusses and Frames
	2-D Elements and Plates
		...maybe save this one for later.  It looks like fun!
	Convergence and Error Estimation
		p optimization --> Compute one higher order polynomial	
		h optimization --> Mesh refinement
		Error in terms of stresses, strains, forces, and any other physical quantities
		Graphs of error improvement
	Code profiling


